//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。  
//     技术支持：稻米(www.cnblogs.com/leoxie2011)
//     对此文件的更改可能会导致不正确的行为
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Data;
using System.Data.Common;
using Liger.Common;
using Liger.Data;

namespace Liger.Model
{

	/// <summary>
	/// 实体类Sys_Button
	/// </summary>
	[Serializable]
	public class SysButton : Entity 
	{ 
		 public SysButton() 
            : base("Sys_Button") 
        { 

        }


		#region Model
		private int _BtnID;
		private string _BtnName;
		private string _BtnNo;
		private string _BtnClass;
		private string _BtnIcon;
		private string _BtnScript;
		private string _MenuNo;
		private string _InitStatus;
		private int? _SeqNo;
	 
		/// <summary>
		/// 
		/// </summary>
		public int BtnID
		{
			get{ return _BtnID; }
			set
			{
				this.OnPropertyValueChange(_.BtnID,_BtnID,value);
				this._BtnID = value;
			}
		}
		/// <summary>
		/// 
		/// </summary>
		public string BtnName
		{
			get{ return _BtnName; }
			set
			{
				this.OnPropertyValueChange(_.BtnName,_BtnName,value);
				this._BtnName = value;
			}
		}
		/// <summary>
		/// 
		/// </summary>
		public string BtnNo
		{
			get{ return _BtnNo; }
			set
			{
				this.OnPropertyValueChange(_.BtnNo,_BtnNo,value);
				this._BtnNo = value;
			}
		}
		/// <summary>
		/// 
		/// </summary>
		public string BtnClass
		{
			get{ return _BtnClass; }
			set
			{
				this.OnPropertyValueChange(_.BtnClass,_BtnClass,value);
				this._BtnClass = value;
			}
		}
		/// <summary>
		/// 
		/// </summary>
		public string BtnIcon
		{
			get{ return _BtnIcon; }
			set
			{
				this.OnPropertyValueChange(_.BtnIcon,_BtnIcon,value);
				this._BtnIcon = value;
			}
		}
		/// <summary>
		/// 
		/// </summary>
		public string BtnScript
		{
			get{ return _BtnScript; }
			set
			{
				this.OnPropertyValueChange(_.BtnScript,_BtnScript,value);
				this._BtnScript = value;
			}
		}
		/// <summary>
		/// 
		/// </summary>
		public string MenuNo
		{
			get{ return _MenuNo; }
			set
			{
				this.OnPropertyValueChange(_.MenuNo,_MenuNo,value);
				this._MenuNo = value;
			}
		}
		/// <summary>
		/// 
		/// </summary>
		public string InitStatus
		{
			get{ return _InitStatus; }
			set
			{
				this.OnPropertyValueChange(_.InitStatus,_InitStatus,value);
				this._InitStatus = value;
			}
		}
		/// <summary>
		/// 
		/// </summary>
		public int? SeqNo
		{
			get{ return _SeqNo; }
			set
			{
				this.OnPropertyValueChange(_.SeqNo,_SeqNo,value);
				this._SeqNo = value;
			}
		}
		#endregion

		#region Method
		/// <summary>
		/// 获取实体中的标识列
		/// </summary>
		public override Field GetIdentityField()
		{
			return _.BtnID;
		}
		/// <summary>
		/// 获取实体中的主键列
		/// </summary>
		public override Field[] GetPrimaryKeyFields()
		{
			return new Field[] {
				_.BtnID			};
		}
		/// <summary>
		/// 获取列信息
		/// </summary>
		public override Field[] GetFields()
		{
			return new Field[] {
				_.BtnID,
				_.BtnName,
				_.BtnNo,
				_.BtnClass,
				_.BtnIcon,
				_.BtnScript,
				_.MenuNo,
				_.InitStatus,
				_.SeqNo
			};
		}
		/// <summary>
		/// 获取值信息
		/// </summary>
		public override object[] GetValues()
		{
			return new object[] {
				_BtnID,
				_BtnName,
				_BtnNo,
				_BtnClass,
				_BtnIcon,
				_BtnScript,
				_MenuNo,
				_InitStatus,
				_SeqNo
			};
		} 
		/// <summary>
		/// 设置字段值
		/// </summary>
		public override void SetValue(string fieldName, object value)
        {
            switch (fieldName)
            { 
				case "BtnID":
                    this._BtnID = DataHelper.ConvertValue<int>(value);
                    break; 
				case "BtnName":
                    this._BtnName = DataHelper.ConvertValue<string>(value);
                    break; 
				case "BtnNo":
                    this._BtnNo = DataHelper.ConvertValue<string>(value);
                    break; 
				case "BtnClass":
                    this._BtnClass = DataHelper.ConvertValue<string>(value);
                    break; 
				case "BtnIcon":
                    this._BtnIcon = DataHelper.ConvertValue<string>(value);
                    break; 
				case "BtnScript":
                    this._BtnScript = DataHelper.ConvertValue<string>(value);
                    break; 
				case "MenuNo":
                    this._MenuNo = DataHelper.ConvertValue<string>(value);
                    break; 
				case "InitStatus":
                    this._InitStatus = DataHelper.ConvertValue<string>(value);
                    break; 
				case "SeqNo":
                    this._SeqNo = DataHelper.ConvertValue<int?>(value);
                    break; 
            }
        }
		/// <summary>
		/// 获取字段值
		/// </summary>
        public override object GetValue(string fieldName)
        {
            switch (fieldName)
            { 
				case "BtnID":
                    return this._BtnID; 
				case "BtnName":
                    return this._BtnName; 
				case "BtnNo":
                    return this._BtnNo; 
				case "BtnClass":
                    return this._BtnClass; 
				case "BtnIcon":
                    return this._BtnIcon; 
				case "BtnScript":
                    return this._BtnScript; 
				case "MenuNo":
                    return this._MenuNo; 
				case "InitStatus":
                    return this._InitStatus; 
				case "SeqNo":
                    return this._SeqNo; 
				default :
                    return null;
            } 
        }



		#endregion

		#region _Field
		/// <summary>
		/// 字段信息
		/// </summary>
		public class _
		{
			/// <summary>
			/// * 
			/// </summary>
			public readonly static Field All = new Field("*","Sys_Button");
 
			/// <summary>
			/// 
			/// </summary>
			public readonly static Field BtnID = new Field("BtnID","Sys_Button","BtnID");
			/// <summary>
			/// 
			/// </summary>
			public readonly static Field BtnName = new Field("BtnName","Sys_Button","BtnName");
			/// <summary>
			/// 
			/// </summary>
			public readonly static Field BtnNo = new Field("BtnNo","Sys_Button","BtnNo");
			/// <summary>
			/// 
			/// </summary>
			public readonly static Field BtnClass = new Field("BtnClass","Sys_Button","BtnClass");
			/// <summary>
			/// 
			/// </summary>
			public readonly static Field BtnIcon = new Field("BtnIcon","Sys_Button","BtnIcon");
			/// <summary>
			/// 
			/// </summary>
			public readonly static Field BtnScript = new Field("BtnScript","Sys_Button","BtnScript");
			/// <summary>
			/// 
			/// </summary>
			public readonly static Field MenuNo = new Field("MenuNo","Sys_Button","MenuNo");
			/// <summary>
			/// 
			/// </summary>
			public readonly static Field InitStatus = new Field("InitStatus","Sys_Button","InitStatus");
			/// <summary>
			/// 
			/// </summary>
			public readonly static Field SeqNo = new Field("SeqNo","Sys_Button","SeqNo");
		}
		#endregion

 
	}
}


