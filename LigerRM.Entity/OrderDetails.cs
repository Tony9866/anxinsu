//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。  
//     技术支持：稻米(www.cnblogs.com/leoxie2011)
//     对此文件的更改可能会导致不正确的行为
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Data;
using System.Data.Common;
using Liger.Common;
using Liger.Data;

namespace Liger.Model
{

	/// <summary>
	/// 实体类Order Details
	/// </summary>
	[Serializable]
	public class OrderDetails : Entity 
	{ 
		 public OrderDetails() 
            : base("Order Details") 
        { 

        }


		#region Model
		private int? _OrderID;
		private int _ProductID;
		private decimal _UnitPrice;
		private int _Quantity;
		private decimal _Discount;
	 
		/// <summary>
		/// Same as Order ID in Orders table.
		/// </summary>
		public int? OrderID
		{
			get{ return _OrderID; }
			set
			{
				this.OnPropertyValueChange(_.OrderID,_OrderID,value);
				this._OrderID = value;
			}
		}
		/// <summary>
		/// Same as Product ID in Products table.
		/// </summary>
		public int ProductID
		{
			get{ return _ProductID; }
			set
			{
				this.OnPropertyValueChange(_.ProductID,_ProductID,value);
				this._ProductID = value;
			}
		}
		/// <summary>
		/// 
		/// </summary>
		public decimal UnitPrice
		{
			get{ return _UnitPrice; }
			set
			{
				this.OnPropertyValueChange(_.UnitPrice,_UnitPrice,value);
				this._UnitPrice = value;
			}
		}
		/// <summary>
		/// 
		/// </summary>
		public int Quantity
		{
			get{ return _Quantity; }
			set
			{
				this.OnPropertyValueChange(_.Quantity,_Quantity,value);
				this._Quantity = value;
			}
		}
		/// <summary>
		/// 
		/// </summary>
        public decimal Discount
		{
			get{ return _Discount; }
			set
			{
				this.OnPropertyValueChange(_.Discount,_Discount,value);
				this._Discount = value;
			}
		}
		#endregion

		#region Method
		/// <summary>
		/// 获取实体中的主键列
		/// </summary>
		public override Field[] GetPrimaryKeyFields()
		{
			return new Field[] {
				_.OrderID,				_.ProductID			};
		}
		/// <summary>
		/// 获取列信息
		/// </summary>
		public override Field[] GetFields()
		{
			return new Field[] {
				_.OrderID,
				_.ProductID,
				_.UnitPrice,
				_.Quantity,
				_.Discount
			};
		}
		/// <summary>
		/// 获取值信息
		/// </summary>
		public override object[] GetValues()
		{
			return new object[] {
				_OrderID,
				_ProductID,
				_UnitPrice,
				_Quantity,
				_Discount
			};
		} 
		/// <summary>
		/// 设置字段值
		/// </summary>
		public override void SetValue(string fieldName, object value)
        {
            switch (fieldName)
            { 
				case "OrderID":
                    this._OrderID = DataHelper.ConvertValue<int?>(value);
                    break; 
				case "ProductID":
                    this._ProductID = DataHelper.ConvertValue<int>(value);
                    break; 
				case "UnitPrice":
                    this._UnitPrice = DataHelper.ConvertValue<decimal>(value);
                    break; 
				case "Quantity":
                    this._Quantity = DataHelper.ConvertValue<int>(value);
                    break; 
				case "Discount":
                    this._Discount = DataHelper.ConvertValue<decimal>(value);
                    break; 
            }
        }
		/// <summary>
		/// 获取字段值
		/// </summary>
        public override object GetValue(string fieldName)
        {
            switch (fieldName)
            { 
				case "OrderID":
                    return this._OrderID; 
				case "ProductID":
                    return this._ProductID; 
				case "UnitPrice":
                    return this._UnitPrice; 
				case "Quantity":
                    return this._Quantity; 
				case "Discount":
                    return this._Discount; 
				default :
                    return null;
            } 
        }



		#endregion

		#region _Field
		/// <summary>
		/// 字段信息
		/// </summary>
		public class _
		{
			/// <summary>
			/// * 
			/// </summary>
			public readonly static Field All = new Field("*","Order Details");
 
			/// <summary>
			/// Same as Order ID in Orders table.
			/// </summary>
			public readonly static Field OrderID = new Field("OrderID","Order Details","OrderID");
			/// <summary>
			/// Same as Product ID in Products table.
			/// </summary>
			public readonly static Field ProductID = new Field("ProductID","Order Details","ProductID");
			/// <summary>
			/// 
			/// </summary>
			public readonly static Field UnitPrice = new Field("UnitPrice","Order Details","UnitPrice");
			/// <summary>
			/// 
			/// </summary>
			public readonly static Field Quantity = new Field("Quantity","Order Details","Quantity");
			/// <summary>
			/// 
			/// </summary>
			public readonly static Field Discount = new Field("Discount","Order Details","Discount");
		}
		#endregion

 
	}
}


