//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。  
//     技术支持：稻米(www.cnblogs.com/leoxie2011)
//     对此文件的更改可能会导致不正确的行为
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Data;
using System.Data.Common;
using Liger.Common;
using Liger.Data;

namespace Liger.Model
{

	/// <summary>
	/// 实体类CF_Favorite
	/// </summary>
	[Serializable]
	public class CFFavorite : Entity 
	{ 
		 public CFFavorite() 
            : base("CF_Favorite") 
        { 

        }


		#region Model
		private int _FavoriteID;
		private string _FavoriteTitle;
		private DateTime? _FavoriteAddTime;
		private string _FavoriteContent;
		private int? _UserID;
		private string _Url;
		private string _Icon;
	 
		/// <summary>
		/// 编号
		/// </summary>
		public int FavoriteID
		{
			get{ return _FavoriteID; }
			set
			{
				this.OnPropertyValueChange(_.FavoriteID,_FavoriteID,value);
				this._FavoriteID = value;
			}
		}
		/// <summary>
		/// 标题
		/// </summary>
		public string FavoriteTitle
		{
			get{ return _FavoriteTitle; }
			set
			{
				this.OnPropertyValueChange(_.FavoriteTitle,_FavoriteTitle,value);
				this._FavoriteTitle = value;
			}
		}
		/// <summary>
		/// 收藏时间
		/// </summary>
		public DateTime? FavoriteAddTime
		{
			get{ return _FavoriteAddTime; }
			set
			{
				this.OnPropertyValueChange(_.FavoriteAddTime,_FavoriteAddTime,value);
				this._FavoriteAddTime = value;
			}
		}
		/// <summary>
		/// 收藏备注
		/// </summary>
		public string FavoriteContent
		{
			get{ return _FavoriteContent; }
			set
			{
				this.OnPropertyValueChange(_.FavoriteContent,_FavoriteContent,value);
				this._FavoriteContent = value;
			}
		}
		/// <summary>
		/// 用户ID
		/// </summary>
		public int? UserID
		{
			get{ return _UserID; }
			set
			{
				this.OnPropertyValueChange(_.UserID,_UserID,value);
				this._UserID = value;
			}
		}
		/// <summary>
		/// 链接url
		/// </summary>
		public string Url
		{
			get{ return _Url; }
			set
			{
				this.OnPropertyValueChange(_.Url,_Url,value);
				this._Url = value;
			}
		}
		/// <summary>
		/// 按钮
		/// </summary>
		public string Icon
		{
			get{ return _Icon; }
			set
			{
				this.OnPropertyValueChange(_.Icon,_Icon,value);
				this._Icon = value;
			}
		}
		#endregion

		#region Method
		/// <summary>
		/// 获取实体中的标识列
		/// </summary>
		public override Field GetIdentityField()
		{
			return _.FavoriteID;
		}
		/// <summary>
		/// 获取实体中的主键列
		/// </summary>
		public override Field[] GetPrimaryKeyFields()
		{
			return new Field[] {
				_.FavoriteID			};
		}
		/// <summary>
		/// 获取列信息
		/// </summary>
		public override Field[] GetFields()
		{
			return new Field[] {
				_.FavoriteID,
				_.FavoriteTitle,
				_.FavoriteAddTime,
				_.FavoriteContent,
				_.UserID,
				_.Url,
				_.Icon
			};
		}
		/// <summary>
		/// 获取值信息
		/// </summary>
		public override object[] GetValues()
		{
			return new object[] {
				_FavoriteID,
				_FavoriteTitle,
				_FavoriteAddTime,
				_FavoriteContent,
				_UserID,
				_Url,
				_Icon
			};
		} 
		/// <summary>
		/// 设置字段值
		/// </summary>
		public override void SetValue(string fieldName, object value)
        {
            switch (fieldName)
            { 
				case "FavoriteID":
                    this._FavoriteID = DataHelper.ConvertValue<int>(value);
                    break; 
				case "FavoriteTitle":
                    this._FavoriteTitle = DataHelper.ConvertValue<string>(value);
                    break; 
				case "FavoriteAddTime":
                    this._FavoriteAddTime = DataHelper.ConvertValue<DateTime?>(value);
                    break; 
				case "FavoriteContent":
                    this._FavoriteContent = DataHelper.ConvertValue<string>(value);
                    break; 
				case "UserID":
                    this._UserID = DataHelper.ConvertValue<int?>(value);
                    break; 
				case "Url":
                    this._Url = DataHelper.ConvertValue<string>(value);
                    break; 
				case "Icon":
                    this._Icon = DataHelper.ConvertValue<string>(value);
                    break; 
            }
        }
		/// <summary>
		/// 获取字段值
		/// </summary>
        public override object GetValue(string fieldName)
        {
            switch (fieldName)
            { 
				case "FavoriteID":
                    return this._FavoriteID; 
				case "FavoriteTitle":
                    return this._FavoriteTitle; 
				case "FavoriteAddTime":
                    return this._FavoriteAddTime; 
				case "FavoriteContent":
                    return this._FavoriteContent; 
				case "UserID":
                    return this._UserID; 
				case "Url":
                    return this._Url; 
				case "Icon":
                    return this._Icon; 
				default :
                    return null;
            } 
        }



		#endregion

		#region _Field
		/// <summary>
		/// 字段信息
		/// </summary>
		public class _
		{
			/// <summary>
			/// * 
			/// </summary>
			public readonly static Field All = new Field("*","CF_Favorite");
 
			/// <summary>
			/// 编号
			/// </summary>
			public readonly static Field FavoriteID = new Field("FavoriteID","CF_Favorite","FavoriteID");
			/// <summary>
			/// 标题
			/// </summary>
			public readonly static Field FavoriteTitle = new Field("FavoriteTitle","CF_Favorite","FavoriteTitle");
			/// <summary>
			/// 收藏时间
			/// </summary>
			public readonly static Field FavoriteAddTime = new Field("FavoriteAddTime","CF_Favorite","FavoriteAddTime");
			/// <summary>
			/// 收藏备注
			/// </summary>
			public readonly static Field FavoriteContent = new Field("FavoriteContent","CF_Favorite","FavoriteContent");
			/// <summary>
			/// 用户ID
			/// </summary>
			public readonly static Field UserID = new Field("UserID","CF_Favorite","UserID");
			/// <summary>
			/// 链接url
			/// </summary>
			public readonly static Field Url = new Field("Url","CF_Favorite","Url");
			/// <summary>
			/// 按钮
			/// </summary>
			public readonly static Field Icon = new Field("Icon","CF_Favorite","Icon");
		}
		#endregion

 
	}
}


