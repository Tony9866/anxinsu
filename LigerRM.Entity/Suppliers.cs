//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。  
//     技术支持：稻米(www.cnblogs.com/leoxie2011)
//     对此文件的更改可能会导致不正确的行为
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Data;
using System.Data.Common;
using Liger.Common;
using Liger.Data;

namespace Liger.Model
{

	/// <summary>
	/// 实体类Suppliers
	/// </summary>
	[Serializable]
	public class Suppliers : Entity 
	{ 
		 public Suppliers() 
            : base("Suppliers") 
        { 

        }


		#region Model
		private int _SupplierID;
		private string _CompanyName;
		private string _ContactName;
		private string _ContactTitle;
		private string _Address;
		private string _City;
		private string _Region;
		private string _PostalCode;
		private string _Country;
		private string _Phone;
		private string _Fax;
	 
		/// <summary>
		/// Number automatically assigned to new supplier.
		/// </summary>
		public int SupplierID
		{
			get{ return _SupplierID; }
			set
			{
				this.OnPropertyValueChange(_.SupplierID,_SupplierID,value);
				this._SupplierID = value;
			}
		}
		/// <summary>
		/// 
		/// </summary>
		public string CompanyName
		{
			get{ return _CompanyName; }
			set
			{
				this.OnPropertyValueChange(_.CompanyName,_CompanyName,value);
				this._CompanyName = value;
			}
		}
		/// <summary>
		/// 
		/// </summary>
		public string ContactName
		{
			get{ return _ContactName; }
			set
			{
				this.OnPropertyValueChange(_.ContactName,_ContactName,value);
				this._ContactName = value;
			}
		}
		/// <summary>
		/// 
		/// </summary>
		public string ContactTitle
		{
			get{ return _ContactTitle; }
			set
			{
				this.OnPropertyValueChange(_.ContactTitle,_ContactTitle,value);
				this._ContactTitle = value;
			}
		}
		/// <summary>
		/// Street or post-office box.
		/// </summary>
		public string Address
		{
			get{ return _Address; }
			set
			{
				this.OnPropertyValueChange(_.Address,_Address,value);
				this._Address = value;
			}
		}
		/// <summary>
		/// 
		/// </summary>
		public string City
		{
			get{ return _City; }
			set
			{
				this.OnPropertyValueChange(_.City,_City,value);
				this._City = value;
			}
		}
		/// <summary>
		/// State or province.
		/// </summary>
		public string Region
		{
			get{ return _Region; }
			set
			{
				this.OnPropertyValueChange(_.Region,_Region,value);
				this._Region = value;
			}
		}
		/// <summary>
		/// 
		/// </summary>
		public string PostalCode
		{
			get{ return _PostalCode; }
			set
			{
				this.OnPropertyValueChange(_.PostalCode,_PostalCode,value);
				this._PostalCode = value;
			}
		}
		/// <summary>
		/// 
		/// </summary>
		public string Country
		{
			get{ return _Country; }
			set
			{
				this.OnPropertyValueChange(_.Country,_Country,value);
				this._Country = value;
			}
		}
		/// <summary>
		/// Phone number includes country code or area code.
		/// </summary>
		public string Phone
		{
			get{ return _Phone; }
			set
			{
				this.OnPropertyValueChange(_.Phone,_Phone,value);
				this._Phone = value;
			}
		}
		/// <summary>
		/// Phone number includes country code or area code.
		/// </summary>
		public string Fax
		{
			get{ return _Fax; }
			set
			{
				this.OnPropertyValueChange(_.Fax,_Fax,value);
				this._Fax = value;
			}
		}
		#endregion

		#region Method
		/// <summary>
		/// 获取实体中的标识列
		/// </summary>
		public override Field GetIdentityField()
		{
			return _.SupplierID;
		}
		/// <summary>
		/// 获取实体中的主键列
		/// </summary>
		public override Field[] GetPrimaryKeyFields()
		{
			return new Field[] {
				_.SupplierID			};
		}
		/// <summary>
		/// 获取列信息
		/// </summary>
		public override Field[] GetFields()
		{
			return new Field[] {
				_.SupplierID,
				_.CompanyName,
				_.ContactName,
				_.ContactTitle,
				_.Address,
				_.City,
				_.Region,
				_.PostalCode,
				_.Country,
				_.Phone,
				_.Fax
			};
		}
		/// <summary>
		/// 获取值信息
		/// </summary>
		public override object[] GetValues()
		{
			return new object[] {
				_SupplierID,
				_CompanyName,
				_ContactName,
				_ContactTitle,
				_Address,
				_City,
				_Region,
				_PostalCode,
				_Country,
				_Phone,
				_Fax
			};
		} 
		/// <summary>
		/// 设置字段值
		/// </summary>
		public override void SetValue(string fieldName, object value)
        {
            switch (fieldName)
            { 
				case "SupplierID":
                    this._SupplierID = DataHelper.ConvertValue<int>(value);
                    break; 
				case "CompanyName":
                    this._CompanyName = DataHelper.ConvertValue<string>(value);
                    break; 
				case "ContactName":
                    this._ContactName = DataHelper.ConvertValue<string>(value);
                    break; 
				case "ContactTitle":
                    this._ContactTitle = DataHelper.ConvertValue<string>(value);
                    break; 
				case "Address":
                    this._Address = DataHelper.ConvertValue<string>(value);
                    break; 
				case "City":
                    this._City = DataHelper.ConvertValue<string>(value);
                    break; 
				case "Region":
                    this._Region = DataHelper.ConvertValue<string>(value);
                    break; 
				case "PostalCode":
                    this._PostalCode = DataHelper.ConvertValue<string>(value);
                    break; 
				case "Country":
                    this._Country = DataHelper.ConvertValue<string>(value);
                    break; 
				case "Phone":
                    this._Phone = DataHelper.ConvertValue<string>(value);
                    break; 
				case "Fax":
                    this._Fax = DataHelper.ConvertValue<string>(value);
                    break; 
            }
        }
		/// <summary>
		/// 获取字段值
		/// </summary>
        public override object GetValue(string fieldName)
        {
            switch (fieldName)
            { 
				case "SupplierID":
                    return this._SupplierID; 
				case "CompanyName":
                    return this._CompanyName; 
				case "ContactName":
                    return this._ContactName; 
				case "ContactTitle":
                    return this._ContactTitle; 
				case "Address":
                    return this._Address; 
				case "City":
                    return this._City; 
				case "Region":
                    return this._Region; 
				case "PostalCode":
                    return this._PostalCode; 
				case "Country":
                    return this._Country; 
				case "Phone":
                    return this._Phone; 
				case "Fax":
                    return this._Fax; 
				default :
                    return null;
            } 
        }



		#endregion

		#region _Field
		/// <summary>
		/// 字段信息
		/// </summary>
		public class _
		{
			/// <summary>
			/// * 
			/// </summary>
			public readonly static Field All = new Field("*","Suppliers");
 
			/// <summary>
			/// Number automatically assigned to new supplier.
			/// </summary>
			public readonly static Field SupplierID = new Field("SupplierID","Suppliers","SupplierID");
			/// <summary>
			/// 
			/// </summary>
			public readonly static Field CompanyName = new Field("CompanyName","Suppliers","CompanyName");
			/// <summary>
			/// 
			/// </summary>
			public readonly static Field ContactName = new Field("ContactName","Suppliers","ContactName");
			/// <summary>
			/// 
			/// </summary>
			public readonly static Field ContactTitle = new Field("ContactTitle","Suppliers","ContactTitle");
			/// <summary>
			/// Street or post-office box.
			/// </summary>
			public readonly static Field Address = new Field("Address","Suppliers","Address");
			/// <summary>
			/// 
			/// </summary>
			public readonly static Field City = new Field("City","Suppliers","City");
			/// <summary>
			/// State or province.
			/// </summary>
			public readonly static Field Region = new Field("Region","Suppliers","Region");
			/// <summary>
			/// 
			/// </summary>
			public readonly static Field PostalCode = new Field("PostalCode","Suppliers","PostalCode");
			/// <summary>
			/// 
			/// </summary>
			public readonly static Field Country = new Field("Country","Suppliers","Country");
			/// <summary>
			/// Phone number includes country code or area code.
			/// </summary>
			public readonly static Field Phone = new Field("Phone","Suppliers","Phone");
			/// <summary>
			/// Phone number includes country code or area code.
			/// </summary>
			public readonly static Field Fax = new Field("Fax","Suppliers","Fax");
		}
		#endregion

 
	}
}


