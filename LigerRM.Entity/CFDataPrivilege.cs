//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。  
//     技术支持：稻米(www.cnblogs.com/leoxie2011)
//     对此文件的更改可能会导致不正确的行为
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Data;
using System.Data.Common;
using Liger.Common;
using Liger.Data;

namespace Liger.Model
{

	/// <summary>
	/// 实体类CF_DataPrivilege
	/// </summary>
	[Serializable]
	public class CFDataPrivilege : Entity 
	{ 
		 public CFDataPrivilege() 
            : base("CF_DataPrivilege") 
        { 

        }


		#region Model
		private int _DataPrivilegeID;
        private string _DataPrivilegeView;
		private string _DataPrivilegeRule;
	 
		/// <summary>
		/// 
		/// </summary>
		public int DataPrivilegeID
		{
			get{ return _DataPrivilegeID; }
			set
			{
				this.OnPropertyValueChange(_.DataPrivilegeID,_DataPrivilegeID,value);
				this._DataPrivilegeID = value;
			}
		}
		/// <summary>
		/// 
		/// </summary>
        public string DataPrivilegeView
		{
            get { return _DataPrivilegeView; }
			set
			{
                this.OnPropertyValueChange(_.DataPrivilegeView, _DataPrivilegeView, value);
                this._DataPrivilegeView = value;
			}
		}
		/// <summary>
		/// 
		/// </summary>
		public string DataPrivilegeRule
		{
			get{ return _DataPrivilegeRule; }
			set
			{
				this.OnPropertyValueChange(_.DataPrivilegeRule,_DataPrivilegeRule,value);
				this._DataPrivilegeRule = value;
			}
		}
		#endregion

		#region Method
		/// <summary>
		/// 获取实体中的标识列
		/// </summary>
		public override Field GetIdentityField()
		{
			return _.DataPrivilegeID;
		}
		/// <summary>
		/// 获取实体中的主键列
		/// </summary>
		public override Field[] GetPrimaryKeyFields()
		{
			return new Field[] {
				_.DataPrivilegeID			};
		}
		/// <summary>
		/// 获取列信息
		/// </summary>
		public override Field[] GetFields()
		{
			return new Field[] {
				_.DataPrivilegeID,
				_.DataPrivilegeView,
				_.DataPrivilegeRule
			};
		}
		/// <summary>
		/// 获取值信息
		/// </summary>
		public override object[] GetValues()
		{
			return new object[] {
				_DataPrivilegeID,
				_DataPrivilegeView,
				_DataPrivilegeRule
			};
		} 
		/// <summary>
		/// 设置字段值
		/// </summary>
		public override void SetValue(string fieldName, object value)
        {
            switch (fieldName)
            { 
				case "DataPrivilegeID":
                    this._DataPrivilegeID = DataHelper.ConvertValue<int>(value);
                    break; 
				case "DataPrivilegeView":
                    this._DataPrivilegeView = DataHelper.ConvertValue<string>(value);
                    break; 
				case "DataPrivilegeRule":
                    this._DataPrivilegeRule = DataHelper.ConvertValue<string>(value);
                    break; 
            }
        }
		/// <summary>
		/// 获取字段值
		/// </summary>
        public override object GetValue(string fieldName)
        {
            switch (fieldName)
            { 
				case "DataPrivilegeID":
                    return this._DataPrivilegeID; 
				case "DataPrivilegeView":
                    return this._DataPrivilegeView; 
				case "DataPrivilegeRule":
                    return this._DataPrivilegeRule; 
				default :
                    return null;
            } 
        }



		#endregion

		#region _Field
		/// <summary>
		/// 字段信息
		/// </summary>
		public class _
		{
			/// <summary>
			/// * 
			/// </summary>
			public readonly static Field All = new Field("*","CF_DataPrivilege");
 
			/// <summary>
			/// 
			/// </summary>
			public readonly static Field DataPrivilegeID = new Field("DataPrivilegeID","CF_DataPrivilege","DataPrivilegeID");
			/// <summary>
			/// 
			/// </summary>
            public readonly static Field DataPrivilegeView = new Field("DataPrivilegeView", "CF_DataPrivilege", "DataPrivilegeView");
			/// <summary>
			/// 
			/// </summary>
			public readonly static Field DataPrivilegeRule = new Field("DataPrivilegeRule","CF_DataPrivilege","DataPrivilegeRule");
		}
		#endregion

 
	}
}


