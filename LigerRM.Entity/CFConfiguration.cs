//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。  
//     技术支持：稻米(www.cnblogs.com/leoxie2011)
//     对此文件的更改可能会导致不正确的行为
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Data;
using System.Data.Common;
using Liger.Common;
using Liger.Data;

namespace Liger.Model
{

	/// <summary>
	/// 实体类CF_Configuration
	/// </summary>
	[Serializable]
	public class CFConfiguration : Entity 
	{ 
		 public CFConfiguration() 
            : base("CF_Configuration") 
        { 

        }


		#region Model
		private int _ConfigID;
		private string _View;
		private string _Grid;
		private string _Search;
		private string _Form;
	 
		/// <summary>
		/// 自动编号
		/// </summary>
		public int ConfigID
		{
			get{ return _ConfigID; }
			set
			{
				this.OnPropertyValueChange(_.ConfigID,_ConfigID,value);
				this._ConfigID = value;
			}
		}
		/// <summary>
		/// 视图名/表名
		/// </summary>
		public string View
		{
			get{ return _View; }
			set
			{
				this.OnPropertyValueChange(_.View,_View,value);
				this._View = value;
			}
		}
		/// <summary>
		/// grid的配置信息(json)
		/// </summary>
		public string Grid
		{
			get{ return _Grid; }
			set
			{
				this.OnPropertyValueChange(_.Grid,_Grid,value);
				this._Grid = value;
			}
		}
		/// <summary>
		/// search的配置信息(json)
		/// </summary>
		public string Search
		{
			get{ return _Search; }
			set
			{
				this.OnPropertyValueChange(_.Search,_Search,value);
				this._Search = value;
			}
		}
		/// <summary>
		/// form的配置信息(json)
		/// </summary>
		public string Form
		{
			get{ return _Form; }
			set
			{
				this.OnPropertyValueChange(_.Form,_Form,value);
				this._Form = value;
			}
		}
		#endregion

		#region Method
		/// <summary>
		/// 获取实体中的标识列
		/// </summary>
		public override Field GetIdentityField()
		{
			return _.ConfigID;
		}
		/// <summary>
		/// 获取实体中的主键列
		/// </summary>
		public override Field[] GetPrimaryKeyFields()
		{
			return new Field[] {
				_.ConfigID			};
		}
		/// <summary>
		/// 获取列信息
		/// </summary>
		public override Field[] GetFields()
		{
			return new Field[] {
				_.ConfigID,
				_.View,
				_.Grid,
				_.Search,
				_.Form
			};
		}
		/// <summary>
		/// 获取值信息
		/// </summary>
		public override object[] GetValues()
		{
			return new object[] {
				_ConfigID,
				_View,
				_Grid,
				_Search,
				_Form
			};
		} 
		/// <summary>
		/// 设置字段值
		/// </summary>
		public override void SetValue(string fieldName, object value)
        {
            switch (fieldName)
            { 
				case "ConfigID":
                    this._ConfigID = DataHelper.ConvertValue<int>(value);
                    break; 
				case "View":
                    this._View = DataHelper.ConvertValue<string>(value);
                    break; 
				case "Grid":
                    this._Grid = DataHelper.ConvertValue<string>(value);
                    break; 
				case "Search":
                    this._Search = DataHelper.ConvertValue<string>(value);
                    break; 
				case "Form":
                    this._Form = DataHelper.ConvertValue<string>(value);
                    break; 
            }
        }
		/// <summary>
		/// 获取字段值
		/// </summary>
        public override object GetValue(string fieldName)
        {
            switch (fieldName)
            { 
				case "ConfigID":
                    return this._ConfigID; 
				case "View":
                    return this._View; 
				case "Grid":
                    return this._Grid; 
				case "Search":
                    return this._Search; 
				case "Form":
                    return this._Form; 
				default :
                    return null;
            } 
        }



		#endregion

		#region _Field
		/// <summary>
		/// 字段信息
		/// </summary>
		public class _
		{
			/// <summary>
			/// * 
			/// </summary>
			public readonly static Field All = new Field("*","CF_Configuration");
 
			/// <summary>
			/// 自动编号
			/// </summary>
			public readonly static Field ConfigID = new Field("ConfigID","CF_Configuration","ConfigID");
			/// <summary>
			/// 视图名/表名
			/// </summary>
			public readonly static Field View = new Field("View","CF_Configuration","View");
			/// <summary>
			/// grid的配置信息(json)
			/// </summary>
			public readonly static Field Grid = new Field("Grid","CF_Configuration","Grid");
			/// <summary>
			/// search的配置信息(json)
			/// </summary>
			public readonly static Field Search = new Field("Search","CF_Configuration","Search");
			/// <summary>
			/// form的配置信息(json)
			/// </summary>
			public readonly static Field Form = new Field("Form","CF_Configuration","Form");
		}
		#endregion

 
	}
}


