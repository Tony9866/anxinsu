//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。  
//     技术支持：稻米(www.cnblogs.com/leoxie2011)
//     对此文件的更改可能会导致不正确的行为
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Data;
using System.Data.Common;
using Liger.Common;
using Liger.Data;

namespace Liger.Model
{

	/// <summary>
	/// 实体类Shippers
	/// </summary>
	[Serializable]
	public class Shippers : Entity 
	{ 
		 public Shippers() 
            : base("Shippers") 
        { 

        }


		#region Model
		private int _ShipperID;
		private string _CompanyName;
		private string _Phone;
	 
		/// <summary>
		/// Number automatically assigned to new shipper.
		/// </summary>
		public int ShipperID
		{
			get{ return _ShipperID; }
			set
			{
				this.OnPropertyValueChange(_.ShipperID,_ShipperID,value);
				this._ShipperID = value;
			}
		}
		/// <summary>
		/// Name of shipping company.
		/// </summary>
		public string CompanyName
		{
			get{ return _CompanyName; }
			set
			{
				this.OnPropertyValueChange(_.CompanyName,_CompanyName,value);
				this._CompanyName = value;
			}
		}
		/// <summary>
		/// Phone number includes country code or area code.
		/// </summary>
		public string Phone
		{
			get{ return _Phone; }
			set
			{
				this.OnPropertyValueChange(_.Phone,_Phone,value);
				this._Phone = value;
			}
		}
		#endregion

		#region Method
		/// <summary>
		/// 获取实体中的标识列
		/// </summary>
		public override Field GetIdentityField()
		{
			return _.ShipperID;
		}
		/// <summary>
		/// 获取实体中的主键列
		/// </summary>
		public override Field[] GetPrimaryKeyFields()
		{
			return new Field[] {
				_.ShipperID			};
		}
		/// <summary>
		/// 获取列信息
		/// </summary>
		public override Field[] GetFields()
		{
			return new Field[] {
				_.ShipperID,
				_.CompanyName,
				_.Phone
			};
		}
		/// <summary>
		/// 获取值信息
		/// </summary>
		public override object[] GetValues()
		{
			return new object[] {
				_ShipperID,
				_CompanyName,
				_Phone
			};
		} 
		/// <summary>
		/// 设置字段值
		/// </summary>
		public override void SetValue(string fieldName, object value)
        {
            switch (fieldName)
            { 
				case "ShipperID":
                    this._ShipperID = DataHelper.ConvertValue<int>(value);
                    break; 
				case "CompanyName":
                    this._CompanyName = DataHelper.ConvertValue<string>(value);
                    break; 
				case "Phone":
                    this._Phone = DataHelper.ConvertValue<string>(value);
                    break; 
            }
        }
		/// <summary>
		/// 获取字段值
		/// </summary>
        public override object GetValue(string fieldName)
        {
            switch (fieldName)
            { 
				case "ShipperID":
                    return this._ShipperID; 
				case "CompanyName":
                    return this._CompanyName; 
				case "Phone":
                    return this._Phone; 
				default :
                    return null;
            } 
        }



		#endregion

		#region _Field
		/// <summary>
		/// 字段信息
		/// </summary>
		public class _
		{
			/// <summary>
			/// * 
			/// </summary>
			public readonly static Field All = new Field("*","Shippers");
 
			/// <summary>
			/// Number automatically assigned to new shipper.
			/// </summary>
			public readonly static Field ShipperID = new Field("ShipperID","Shippers","ShipperID");
			/// <summary>
			/// Name of shipping company.
			/// </summary>
			public readonly static Field CompanyName = new Field("CompanyName","Shippers","CompanyName");
			/// <summary>
			/// Phone number includes country code or area code.
			/// </summary>
			public readonly static Field Phone = new Field("Phone","Shippers","Phone");
		}
		#endregion

 
	}
}


