//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。  
//     技术支持：稻米(www.cnblogs.com/leoxie2011)
//     对此文件的更改可能会导致不正确的行为
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Data;
using System.Data.Common;
using Liger.Common;
using Liger.Data;

namespace Liger.Model
{

	/// <summary>
	/// 实体类Employees
	/// </summary>
	[Serializable]
	public class Employees : Entity 
	{ 
		 public Employees() 
            : base("Employees") 
        { 

        }


		#region Model
		private int _EmployeeID;
		private string _LastName;
		private string _FirstName;
		private string _Title;
		private string _TitleOfCourtesy;
		private DateTime? _BirthDate;
		private DateTime? _HireDate;
		private string _Address;
		private string _City;
		private string _Region;
		private string _PostalCode;
		private string _Country;
		private string _HomePhone;
		private string _Extension;
		private string _Notes;
		private int? _ReportsTo;
	 
		/// <summary>
		/// Number automatically assigned to new employee.
		/// </summary>
		public int EmployeeID
		{
			get{ return _EmployeeID; }
			set
			{
				this.OnPropertyValueChange(_.EmployeeID,_EmployeeID,value);
				this._EmployeeID = value;
			}
		}
		/// <summary>
		/// 
		/// </summary>
		public string LastName
		{
			get{ return _LastName; }
			set
			{
				this.OnPropertyValueChange(_.LastName,_LastName,value);
				this._LastName = value;
			}
		}
		/// <summary>
		/// 
		/// </summary>
		public string FirstName
		{
			get{ return _FirstName; }
			set
			{
				this.OnPropertyValueChange(_.FirstName,_FirstName,value);
				this._FirstName = value;
			}
		}
		/// <summary>
		/// Employee's title.
		/// </summary>
		public string Title
		{
			get{ return _Title; }
			set
			{
				this.OnPropertyValueChange(_.Title,_Title,value);
				this._Title = value;
			}
		}
		/// <summary>
		/// Title used in salutations.
		/// </summary>
		public string TitleOfCourtesy
		{
			get{ return _TitleOfCourtesy; }
			set
			{
				this.OnPropertyValueChange(_.TitleOfCourtesy,_TitleOfCourtesy,value);
				this._TitleOfCourtesy = value;
			}
		}
		/// <summary>
		/// 
		/// </summary>
		public DateTime? BirthDate
		{
			get{ return _BirthDate; }
			set
			{
				this.OnPropertyValueChange(_.BirthDate,_BirthDate,value);
				this._BirthDate = value;
			}
		}
		/// <summary>
		/// 
		/// </summary>
		public DateTime? HireDate
		{
			get{ return _HireDate; }
			set
			{
				this.OnPropertyValueChange(_.HireDate,_HireDate,value);
				this._HireDate = value;
			}
		}
		/// <summary>
		/// Street or post-office box.
		/// </summary>
		public string Address
		{
			get{ return _Address; }
			set
			{
				this.OnPropertyValueChange(_.Address,_Address,value);
				this._Address = value;
			}
		}
		/// <summary>
		/// 
		/// </summary>
		public string City
		{
			get{ return _City; }
			set
			{
				this.OnPropertyValueChange(_.City,_City,value);
				this._City = value;
			}
		}
		/// <summary>
		/// State or province.
		/// </summary>
		public string Region
		{
			get{ return _Region; }
			set
			{
				this.OnPropertyValueChange(_.Region,_Region,value);
				this._Region = value;
			}
		}
		/// <summary>
		/// 
		/// </summary>
		public string PostalCode
		{
			get{ return _PostalCode; }
			set
			{
				this.OnPropertyValueChange(_.PostalCode,_PostalCode,value);
				this._PostalCode = value;
			}
		}
		/// <summary>
		/// 
		/// </summary>
		public string Country
		{
			get{ return _Country; }
			set
			{
				this.OnPropertyValueChange(_.Country,_Country,value);
				this._Country = value;
			}
		}
		/// <summary>
		/// Phone number includes country code or area code.
		/// </summary>
		public string HomePhone
		{
			get{ return _HomePhone; }
			set
			{
				this.OnPropertyValueChange(_.HomePhone,_HomePhone,value);
				this._HomePhone = value;
			}
		}
		/// <summary>
		/// Internal telephone extension number.
		/// </summary>
		public string Extension
		{
			get{ return _Extension; }
			set
			{
				this.OnPropertyValueChange(_.Extension,_Extension,value);
				this._Extension = value;
			}
		}
		/// <summary>
		/// General information about employee's background.
		/// </summary>
		public string Notes
		{
			get{ return _Notes; }
			set
			{
				this.OnPropertyValueChange(_.Notes,_Notes,value);
				this._Notes = value;
			}
		}
		/// <summary>
		/// Employee's supervisor.
		/// </summary>
		public int? ReportsTo
		{
			get{ return _ReportsTo; }
			set
			{
				this.OnPropertyValueChange(_.ReportsTo,_ReportsTo,value);
				this._ReportsTo = value;
			}
		}
		#endregion

		#region Method
		/// <summary>
		/// 获取实体中的标识列
		/// </summary>
		public override Field GetIdentityField()
		{
			return _.EmployeeID;
		}
		/// <summary>
		/// 获取实体中的主键列
		/// </summary>
		public override Field[] GetPrimaryKeyFields()
		{
			return new Field[] {
				_.EmployeeID			};
		}
		/// <summary>
		/// 获取列信息
		/// </summary>
		public override Field[] GetFields()
		{
			return new Field[] {
				_.EmployeeID,
				_.LastName,
				_.FirstName,
				_.Title,
				_.TitleOfCourtesy,
				_.BirthDate,
				_.HireDate,
				_.Address,
				_.City,
				_.Region,
				_.PostalCode,
				_.Country,
				_.HomePhone,
				_.Extension,
				_.Notes,
				_.ReportsTo
			};
		}
		/// <summary>
		/// 获取值信息
		/// </summary>
		public override object[] GetValues()
		{
			return new object[] {
				_EmployeeID,
				_LastName,
				_FirstName,
				_Title,
				_TitleOfCourtesy,
				_BirthDate,
				_HireDate,
				_Address,
				_City,
				_Region,
				_PostalCode,
				_Country,
				_HomePhone,
				_Extension,
				_Notes,
				_ReportsTo
			};
		} 
		/// <summary>
		/// 设置字段值
		/// </summary>
		public override void SetValue(string fieldName, object value)
        {
            switch (fieldName)
            { 
				case "EmployeeID":
                    this._EmployeeID = DataHelper.ConvertValue<int>(value);
                    break; 
				case "LastName":
                    this._LastName = DataHelper.ConvertValue<string>(value);
                    break; 
				case "FirstName":
                    this._FirstName = DataHelper.ConvertValue<string>(value);
                    break; 
				case "Title":
                    this._Title = DataHelper.ConvertValue<string>(value);
                    break; 
				case "TitleOfCourtesy":
                    this._TitleOfCourtesy = DataHelper.ConvertValue<string>(value);
                    break; 
				case "BirthDate":
                    this._BirthDate = DataHelper.ConvertValue<DateTime?>(value);
                    break; 
				case "HireDate":
                    this._HireDate = DataHelper.ConvertValue<DateTime?>(value);
                    break; 
				case "Address":
                    this._Address = DataHelper.ConvertValue<string>(value);
                    break; 
				case "City":
                    this._City = DataHelper.ConvertValue<string>(value);
                    break; 
				case "Region":
                    this._Region = DataHelper.ConvertValue<string>(value);
                    break; 
				case "PostalCode":
                    this._PostalCode = DataHelper.ConvertValue<string>(value);
                    break; 
				case "Country":
                    this._Country = DataHelper.ConvertValue<string>(value);
                    break; 
				case "HomePhone":
                    this._HomePhone = DataHelper.ConvertValue<string>(value);
                    break; 
				case "Extension":
                    this._Extension = DataHelper.ConvertValue<string>(value);
                    break; 
				case "Notes":
                    this._Notes = DataHelper.ConvertValue<string>(value);
                    break; 
				case "ReportsTo":
                    this._ReportsTo = DataHelper.ConvertValue<int?>(value);
                    break; 
            }
        }
		/// <summary>
		/// 获取字段值
		/// </summary>
        public override object GetValue(string fieldName)
        {
            switch (fieldName)
            { 
				case "EmployeeID":
                    return this._EmployeeID; 
				case "LastName":
                    return this._LastName; 
				case "FirstName":
                    return this._FirstName; 
				case "Title":
                    return this._Title; 
				case "TitleOfCourtesy":
                    return this._TitleOfCourtesy; 
				case "BirthDate":
                    return this._BirthDate; 
				case "HireDate":
                    return this._HireDate; 
				case "Address":
                    return this._Address; 
				case "City":
                    return this._City; 
				case "Region":
                    return this._Region; 
				case "PostalCode":
                    return this._PostalCode; 
				case "Country":
                    return this._Country; 
				case "HomePhone":
                    return this._HomePhone; 
				case "Extension":
                    return this._Extension; 
				case "Notes":
                    return this._Notes; 
				case "ReportsTo":
                    return this._ReportsTo; 
				default :
                    return null;
            } 
        }



		#endregion

		#region _Field
		/// <summary>
		/// 字段信息
		/// </summary>
		public class _
		{
			/// <summary>
			/// * 
			/// </summary>
			public readonly static Field All = new Field("*","Employees");
 
			/// <summary>
			/// Number automatically assigned to new employee.
			/// </summary>
			public readonly static Field EmployeeID = new Field("EmployeeID","Employees","EmployeeID");
			/// <summary>
			/// 
			/// </summary>
			public readonly static Field LastName = new Field("LastName","Employees","LastName");
			/// <summary>
			/// 
			/// </summary>
			public readonly static Field FirstName = new Field("FirstName","Employees","FirstName");
			/// <summary>
			/// Employee's title.
			/// </summary>
			public readonly static Field Title = new Field("Title","Employees","Title");
			/// <summary>
			/// Title used in salutations.
			/// </summary>
			public readonly static Field TitleOfCourtesy = new Field("TitleOfCourtesy","Employees","TitleOfCourtesy");
			/// <summary>
			/// 
			/// </summary>
			public readonly static Field BirthDate = new Field("BirthDate","Employees","BirthDate");
			/// <summary>
			/// 
			/// </summary>
			public readonly static Field HireDate = new Field("HireDate","Employees","HireDate");
			/// <summary>
			/// Street or post-office box.
			/// </summary>
			public readonly static Field Address = new Field("Address","Employees","Address");
			/// <summary>
			/// 
			/// </summary>
			public readonly static Field City = new Field("City","Employees","City");
			/// <summary>
			/// State or province.
			/// </summary>
			public readonly static Field Region = new Field("Region","Employees","Region");
			/// <summary>
			/// 
			/// </summary>
			public readonly static Field PostalCode = new Field("PostalCode","Employees","PostalCode");
			/// <summary>
			/// 
			/// </summary>
			public readonly static Field Country = new Field("Country","Employees","Country");
			/// <summary>
			/// Phone number includes country code or area code.
			/// </summary>
			public readonly static Field HomePhone = new Field("HomePhone","Employees","HomePhone");
			/// <summary>
			/// Internal telephone extension number.
			/// </summary>
			public readonly static Field Extension = new Field("Extension","Employees","Extension");
			/// <summary>
			/// General information about employee's background.
			/// </summary>
			public readonly static Field Notes = new Field("Notes","Employees","Notes");
			/// <summary>
			/// Employee's supervisor.
			/// </summary>
			public readonly static Field ReportsTo = new Field("ReportsTo","Employees","ReportsTo");
		}
		#endregion

 
	}
}


